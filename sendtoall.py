import logging
from telegram import Update
from telegram.ext import ApplicationBuilder, MessageHandler, filters, ContextTypes
import os
from dotenv import load_dotenv
load_dotenv()

# === Config ===
BOT_TOKEN = "8177144072:AAG3bFK7I4leqrmsP5XmMCbtpIWUV3lhaDE"  # üîπ –≤—Å—Ç–∞–≤ —Å–≤—ñ–π —Ç–æ–∫–µ–Ω
ALLOWED_USERS = {1287504040, 348150320}  # üîπ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤, —è–∫–∏–º –¥–æ–∑–≤–æ–ª–µ–Ω–æ –Ω–∞–¥—Å–∏–ª–∞—Ç–∏
CHANNELS = [
    "-1003113234171","-1003145633887","-1003147594459","-1003138079087","-1003128920788","-1002967860214","-1003033893922","-1003009930050","-1003170499896","-1003096266337","-1003169834725","-1002988126895"
]

# ==== –õ–û–ì–Ü–ù–ì ====
logging.basicConfig(format="%(asctime)s | %(levelname)s | %(message)s", level=logging.INFO)
log = logging.getLogger(__name__)


async def handle_photo(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    user_name = update.effective_user.full_name
    caption = update.message.caption or ""
    photo = update.message.photo[-1]

    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø—É
    if user_id not in ALLOWED_USERS:
        await update.message.reply_text("‚õî –í–∞–º –∑–∞–±–æ—Ä–æ–Ω–µ–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ç–∏—Å—è —Ü—ñ—î—é —Ñ—É–Ω–∫—Ü—ñ—î—é.")
        log.warning(f"–ó–∞–±–æ—Ä–æ–Ω–µ–Ω–∞ —Å–ø—Ä–æ–±–∞ –≤—ñ–¥ {user_name} ({user_id})")
        return

    file_id = photo.file_id
    success, fail = 0, 0

    for channel in CHANNELS:
        try:
            await context.bot.send_photo(chat_id=channel, photo=file_id, caption=caption)
            success += 1
            log.info(f"‚úÖ –§–æ—Ç–æ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ {channel}")
        except Exception as e:
            fail += 1
            log.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –≤ {channel}: {e}")

    await update.message.reply_text(f"‚úÖ –£—Å–ø—ñ—à–Ω–æ: {success}\n‚ùå –ü–æ–º–∏–ª–∫–∏: {fail}")




# ==== –°–¢–ê–†–¢ ====
if __name__ == "__main__":
    app = ApplicationBuilder().token(BOT_TOKEN).build()

    # –û–±—Ä–æ–±–ª—è—î–º–æ –ª–∏—à–µ —Ñ–æ—Ç–æ –∑ –ø—ñ–¥–ø–∏—Å–æ–º (–∞–±–æ –±–µ–∑)
    app.add_handler(MessageHandler(filters.PHOTO, handle_photo))

    print("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–∏–π. –û—á—ñ–∫—É—î –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è...")
    app.run_polling()
